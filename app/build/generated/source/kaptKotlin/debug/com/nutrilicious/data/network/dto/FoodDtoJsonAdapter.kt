// Code generated by moshi-kotlin-codegen. Do not edit.
package com.nutrilicious.data.network.dto

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonDataException
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import kotlin.String

class FoodDtoJsonAdapter(moshi: Moshi) : JsonAdapter<FoodDto>() {
    private val options: JsonReader.Options = JsonReader.Options.of("group", "name", "ndbno")

    private val stringAdapter: JsonAdapter<String> = moshi.adapter(String::class.java).nonNull()

    override fun toString(): String = "GeneratedJsonAdapter(FoodDto)"

    override fun fromJson(reader: JsonReader): FoodDto {
        var group: String? = null
        var name: String? = null
        var ndbno: String? = null
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 -> group = stringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'group' was null at ${reader.path}")
                1 -> name = stringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'name' was null at ${reader.path}")
                2 -> ndbno = stringAdapter.fromJson(reader) ?: throw JsonDataException("Non-null value 'ndbno' was null at ${reader.path}")
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = FoodDto()
        result.group = group ?: result.group
        result.name = name ?: result.name
        result.ndbno = ndbno ?: result.ndbno
        return result
    }

    override fun toJson(writer: JsonWriter, value: FoodDto?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("group")
        stringAdapter.toJson(writer, value.group)
        writer.name("name")
        stringAdapter.toJson(writer, value.name)
        writer.name("ndbno")
        stringAdapter.toJson(writer, value.ndbno)
        writer.endObject()
    }
}
