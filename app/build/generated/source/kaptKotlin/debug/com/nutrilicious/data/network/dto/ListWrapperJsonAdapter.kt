// Code generated by moshi-kotlin-codegen. Do not edit.
package com.nutrilicious.data.network.dto

import com.squareup.moshi.JsonAdapter
import com.squareup.moshi.JsonReader
import com.squareup.moshi.JsonWriter
import com.squareup.moshi.Moshi
import java.lang.NullPointerException
import java.lang.reflect.Type
import kotlin.Array
import kotlin.Boolean
import kotlin.String

class ListWrapperJsonAdapter<T>(moshi: Moshi, types: Array<Type>) : JsonAdapter<ListWrapper<T>>() {
    private val options: JsonReader.Options = JsonReader.Options.of("list")

    private val nullableTAdapter: JsonAdapter<T?> = moshi.adapter<T?>(types[0]).nullSafe()

    override fun toString(): String = "GeneratedJsonAdapter(ListWrapper)"

    override fun fromJson(reader: JsonReader): ListWrapper<T> {
        var list: T? = null
        var listSet: Boolean = false
        reader.beginObject()
        while (reader.hasNext()) {
            when (reader.selectName(options)) {
                0 ->  {
                    list = nullableTAdapter.fromJson(reader)
                    listSet = true
                }
                -1 -> {
                    // Unknown name, skip it.
                    reader.skipName()
                    reader.skipValue()
                }
            }
        }
        reader.endObject()
        var result = ListWrapper<T>()
        result.list = if (listSet) list else result.list
        return result
    }

    override fun toJson(writer: JsonWriter, value: ListWrapper<T>?) {
        if (value == null) {
            throw NullPointerException("value was null! Wrap in .nullSafe() to write nullable values.")
        }
        writer.beginObject()
        writer.name("list")
        nullableTAdapter.toJson(writer, value.list)
        writer.endObject()
    }
}
